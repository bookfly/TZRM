/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import algorithm.Encryption;
import java.io.File;
import java.io.FileNotFoundException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.Enumeration;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

/**
 *
 * @author tabasj
 */
public class EncriptFrame extends javax.swing.JFrame {

    /**
     * Creates new form EncriptFrame
     */
    public EncriptFrame() {
        initComponents();
        initiateScreen();
    }
    
    File selectedFile = null;
    File encrypted = null;
    File decrypted = null;
    Encryption en = null;
    ButtonGroup group = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTxtFile = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtArea = new javax.swing.JTextArea();
        jBEncrypt = new javax.swing.JButton();
        jBDecrypt = new javax.swing.JButton();
        jCB = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTxtEncrypted = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTxtDecrypted = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jBBrowseEncrypted = new javax.swing.JButton();
        jBBrowseDencrypted = new javax.swing.JButton();
        jPFunction = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jRBMD5 = new javax.swing.JRadioButton();
        jRBSHA1 = new javax.swing.JRadioButton();
        jRBSHA256 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("File:");

        jTxtArea.setColumns(20);
        jTxtArea.setRows(5);
        jScrollPane1.setViewportView(jTxtArea);

        jBEncrypt.setText("Encrypt");
        jBEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEncryptActionPerformed(evt);
            }
        });

        jBDecrypt.setText("Decrypt");
        jBDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDecryptActionPerformed(evt);
            }
        });

        jCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBItemStateChanged(evt);
            }
        });

        jLabel2.setText("Algorithm");

        jLabel3.setText("Encrypted:");

        jLabel4.setText("Decrypted:");

        jBBrowseEncrypted.setText("Browse");
        jBBrowseEncrypted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBrowseEncryptedActionPerformed(evt);
            }
        });

        jBBrowseDencrypted.setText("Browse");
        jBBrowseDencrypted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBrowseDencryptedActionPerformed(evt);
            }
        });

        jLabel5.setText("Choose function:");

        jRBMD5.setText("md5");

        jRBSHA1.setText("SHA-1");

        jRBSHA256.setText("SHA-256");

        javax.swing.GroupLayout jPFunctionLayout = new javax.swing.GroupLayout(jPFunction);
        jPFunction.setLayout(jPFunctionLayout);
        jPFunctionLayout.setHorizontalGroup(
            jPFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(35, 35, 35)
                .addComponent(jRBMD5)
                .addGap(18, 18, 18)
                .addComponent(jRBSHA1)
                .addGap(18, 18, 18)
                .addComponent(jRBSHA256)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPFunctionLayout.setVerticalGroup(
            jPFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jRBMD5)
                    .addComponent(jRBSHA1)
                    .addComponent(jRBSHA256))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtDecrypted)
                            .addComponent(jTxtFile)
                            .addComponent(jTxtEncrypted)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBBrowseEncrypted, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBBrowseDencrypted, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBDecrypt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBEncrypt)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBBrowseEncrypted)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtDecrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBBrowseDencrypted)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBDecrypt)
                    .addComponent(jBEncrypt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEncryptActionPerformed
        try {
            if (!jTxtEncrypted.getText().trim().equals("") && jTxtEncrypted.getText().trim().endsWith(".txt")) {
                
                if (jCB.getSelectedItem().toString().equalsIgnoreCase("Aes")) {
                    Constructor c = Class.forName("algorithm." + jCB.getSelectedItem().toString() + "Encryption").getConstructor(String.class);
                    en = (Encryption) c.newInstance(group.getSelection().getActionCommand());
                    hideRadioButtons(false);
                } else {
                    en = (Encryption) Class.forName("algorithm." + jCB.getSelectedItem().toString() + "Encryption").newInstance();
                }
                en.encryptFile(selectedFile, new File(jTxtEncrypted.getText().trim()));
                encrypted = new File(jTxtEncrypted.getText().trim());
                setScreen(encrypted);
                setVisibility(true);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please choose file to write encrypted text");
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | NoSuchMethodException | SecurityException | IllegalArgumentException | InvocationTargetException ex) {
            Logger.getLogger(EncriptFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBEncryptActionPerformed

    private void jBDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDecryptActionPerformed
        if (!jTxtDecrypted.getText().trim().equals("") && jTxtDecrypted.getText().trim().endsWith(".txt")) {
            decrypted = new File(jTxtDecrypted.getText().trim());
            en.decryptFile(encrypted, decrypted);
            setScreen(decrypted);            
            hideRadioButtons(true);
            setVisibility(false);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please choose file to write decrypted text");
        }
    }//GEN-LAST:event_jBDecryptActionPerformed

    private void jBBrowseEncryptedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBrowseEncryptedActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home") + "\\Desktop"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            jTxtEncrypted.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jBBrowseEncryptedActionPerformed

    private void jBBrowseDencryptedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBrowseDencryptedActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home") + "\\Desktop"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            jTxtDecrypted.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jBBrowseDencryptedActionPerformed

    private void jCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBItemStateChanged
        
        if (jCB.getSelectedItem().toString().equalsIgnoreCase("Aes")) {
            jPFunction.setVisible(true);
        }
        
        if (!jCB.getSelectedItem().toString().equalsIgnoreCase("Aes")) {
            jPFunction.setVisible(false);
        }
    }//GEN-LAST:event_jCBItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncriptFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncriptFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncriptFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncriptFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncriptFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBrowseDencrypted;
    private javax.swing.JButton jBBrowseEncrypted;
    private javax.swing.JButton jBDecrypt;
    private javax.swing.JButton jBEncrypt;
    private javax.swing.JComboBox jCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPFunction;
    private javax.swing.JRadioButton jRBMD5;
    private javax.swing.JRadioButton jRBSHA1;
    private javax.swing.JRadioButton jRBSHA256;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTxtArea;
    private javax.swing.JTextField jTxtDecrypted;
    private javax.swing.JTextField jTxtEncrypted;
    private javax.swing.JTextField jTxtFile;
    // End of variables declaration//GEN-END:variables

    public void setFile(File selectedFile) {
        this.selectedFile = selectedFile;
        jTxtFile.setText(selectedFile.getAbsolutePath());
        setScreen(selectedFile);
    }
    
    private void setScreen(File f) {
        Scanner fileIn = null;
        try {
            fileIn = new Scanner(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EncriptFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        String text = "";
        
        if (fileIn.hasNextLine()) {
            text += fileIn.nextLine();
        }
        
        if (text.equals("")) {
            jTxtArea.setText("Encrypting...");
        } else {
            jTxtArea.setText(text);
        }
    }
    
    private void initiateScreen() {
        jPFunction.setVisible(false);
        fillRadioGroup();
        setVisibility(false);
        jTxtFile.setEditable(false);
        fillCombo();
    }
    
    private void setVisibility(Boolean visible) {
        jBDecrypt.setVisible(visible);
        jBEncrypt.setVisible(!visible);
    }
    
    private void fillCombo() {
        jCB.addItem("Des");
        jCB.addItem("Aes");
    }
    
    private void fillRadioGroup() {
        group = new ButtonGroup();
        jRBMD5.setActionCommand("md5");
        jRBSHA1.setActionCommand("SHA-1");
        jRBSHA256.setActionCommand("SHA-256");
        group.add(jRBMD5);
        group.add(jRBSHA1);
        group.add(jRBSHA256);
    }
    
    private void hideRadioButtons(boolean bool) {
        
        Enumeration<AbstractButton> elements = group.getElements();
        while (elements.hasMoreElements()) {
            AbstractButton button = (AbstractButton) elements.nextElement();
            if (bool == false) {
                if (!button.getActionCommand().equals(group.getSelection().getActionCommand())) {
                    button.setEnabled(bool);
                }
            } else {
                button.setEnabled(bool);
            }
        }
        
    }
}
